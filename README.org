#+TITLE: org-superstar-mode
#+STARTUP: showeverything

[[sample_image.png]]

* NEWS

** Current road map

   * getting =org-superstar= up on MELPA :: This is my #1 priority right
        now.  Get it out, get it tested, get feedback.
     + UPDATE :: The pull request is done.  Now it's time to be
                 patient.

   * put the project on Worg :: I guess it's only reasonable to put
        =org-superstar= on Worg at that point.
   * (optional) achieving ELPA compliance and getting on ELPA :: I
        will try to get the package on ELPA too.  However, this seems
        more involved than to get it on MELPA, with more checks and
        monitoring before things can go live.

** =2020-02-26=
   Version *1.0.0* has been released!  With this I consider the package
   as ready for use as it gets.  The change primarily means that:
   * I will try my best not to break backwards compatibility.
   * If I conclude that I have to, I will not do it silently.
     Instead, you can rely on appropriate warnings.
   * Even then, a backwards incompatible changes will result it a
     major version number change.

* About
  Prettify headings and plain lists in Org mode.  This package is a
  direct descendant of ‘[[https://github.com/sabof/org-bullets][org-bullets]]’, with most of the code base
  completely rewritten.  Currently, this package supports:

 * Prettifying Org heading lines by:
   + replacing trailing bullets by UTF-8 bullets^{a)}
   + hiding leading stars^{b)}, customizing their look^{(new!)} or removing
     them from vision^{(new!)}
   + applying a custom face to the header bullet^{d)}
   + applying a custom face to the leading bullets^{(new!)}
   + using double-bullets for inline tasks (see =org-inlinetask.el=)
   + (optional) using special bullets for =TODO= keywords^{(new!)}
 * Prettifying Org plain list bullets^{(new!)} by:
   + replacing each bullet type (~*~, ~+~ and ~-~) with UTF-8 bullets^{c)}
   + applying a custom face to item bullets
 * Gracefully degrading features when viewed from terminal

a) These features are mostly the same as in ~org-bullets-mode~.

b) Plain hiding is now left to Org mode and the associated
variable ~org-hide-leading-stars~ as well as ~org-hide~, as suggested
by [[https://github.com/Kaligule][Kaligule]].

c) ~org-superstar-mode~ tries to prettify in a context-sensitive
fashion: It strives to only recognize item bullets which are really
*meant* to be item bullets.  Your ~SRC~ blocks are safe!

d) Instead of providing the symbol of an existing face in a
variable to replace Org's usual title face(s) for the UTF-8 character,
superstar merges a custom face with the face that would have been
used, allowing the user to inherit the level-dependent default look.

** Planned features
   In this section I maintain a list of possible feature candidates.

   * +hiding leading commas of quoted stars+ ::
     + +unhiding commas whilst editing+ ::
          I have realized that this feature exceeds the scope of the
          package, being too interactive.  This would require a lot of
          font-lock related boilerplate which I am currently
          in the process of dedicating it's own package to.
   * optional display of two leading bullets for inline tasks :: This
        feature is perfectly within the scope of this package.
        However, I will not add it unless asked, to avoid preemptive
        accumulation of features no one asked for.

* Installation

  This package will likely be available on MELPA soon.

  A manual installation is as simple as plugging =org-superstar.el= into
  your load path and adding the following to your =.emacs=:
#+BEGIN_SRC elisp
(require 'org-superstar)
(add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))
#+END_SRC

* Customization
  A variety of customization features has been added to allow further
  tweaking.  Suggestions are always welcome!

  *NOTE:* Many of the variables listed below require you to restart
  ~org-superstar-mode~ to take effect.  See the corresponding variable's
  documentation.

** "Can you make it more like =org-bullets=?"
   Naturally!  In fact, I made the answer to this it's own function:

*** ~org-superstar-configure-like-org-bullets~
    This function configures ~superstar-mode~ to be as similar to
    =org-bullets= as possible.  Since this function automatically sets
    various custom variables, it should only be called *once* per
    session, before any other (manual) customization of this package.

    ~org-superstar-configure-like-org-bullets~ is only meant as a small
    convenience for people who just want minor depatures from
    ~org-bullets-mode~.  For a more fine-grained customization, it’s
    better to just set the variables you want.

** Custom UTF8-Bullets for heading lines
   Here's how you change which bullets are used for which level.

*** ~org-superstar-headline-bullets-list~
    Those of you familiar with =org-bullets= will be recognize this
    list: It's a list of single-character strings where the /Nth/ entry
    is used to determine the bullet used for heading level /N/.  By
    default, this list is cycled through for /N/ greater than the length
    of the list.

*** ~org-superstar-cycle-headline-bullets~
    This variable gives you more control over how ~superstar-mode~ picks
    headline bullets.  The default, ~t~, cycles through the list as
    explained above.  Other values are:

    * ~nil~ :: Go through the list, then repeat the last entry
               indefinitely.
    * any integer /k/ :: Cycle through the first /k/ elements of the list.

*** ~org-superstar-leading-bullet~
    Maybe you actually /like/ that Org's heading lines are connected to
    the left margin, but you find a line of stars too visually busy?
    Enter ~org-superstar-leading-bullet~.  Provide a character of your
    choice to be displayed instead.  Strings are superimposed
    according to the rules of ~compose-region~.  =org-superstar= ships
    with a subtle [[https://en.wikipedia.org/wiki/Leader_(typography)][leader]] as the default.

    *Note for terminal users:* You can apply a simplified composition to
    leading stars for terminal sessions.  See
    ~org-superstar-leading-fallback~ for details.

*** Hide leading stars
    Since ~org-mode~ already takes care of hiding leading stars by
    providing the dedicated variable ~org-hide-leading-stars~ and it's
    associated face ~org-hide~, there is no extra option for /hiding/
    leading stars like that.  Instead, ~org-hide-leading-stars~
    implicitly disables further fontification.

    If you want to get rid of the indentation caused by leading stars
    entirely, set ~org-superstar-remove-leading-stars~ to ~t~.

*** Fancy =TODO= items
    You can substitute standard headline bullets with specialized ones
    fitting the current =TODO= keyword!  To enable this feature, set
    ~org-superstar-special-todo-items~ to ~t~.  To set which =TODO= keywords
    you want to have displayed differently, see
    ~org-superstar-todo-bullet-alist~.

** Custom UTF8-Bullets for plain lists
   Why stop at heading lines?  Customize the look of your list bullets
   to make plain lists a little less so.

*** ~org-superstar-item-bullet-alist~
    Since the concept of "levels" does not really apply to lists, this
    association list simply assigns a UTF-8 character to each of the
    three possible bullet characters for plain Org lists.

*** ~org-superstar-prettify-item-bullets~
    Exactly as it says on the tin.  Set this variable to ~nil~ to stop
    ~org-superstar-mode~ from prettifying lists.

** Custom faces
   These faces allow you to further manipulate the look and feel of
   prettified bullets.

*** ~org-superstar-header-bullet~: "Use ~org-level-N~, but..."
    A face containing essentially the /difference/ between the default
    heading face for the given level (like ~org-level-1~) and the
    bullet.  This face is completely unspecified by default.  Any
    property set will override the corresponding face property of
    ~org-level-N~.

*** ~org-superstar-leading~
    A face used to display leading stars if
    ~org-superstar-prettify-leading-stars~ is enabled.

*** ~org-superstar-item~
    A face used to display prettified plain list bullets if
    ~org-superstar-prettify-item-bullets~ is enabled.

* FAQ / Troubleshooting
** "This mode causes significant slowdown!"
   I have looked into the matter [[https://github.com/integral-dw/org-superstar-mode/issues/3][in the past]], and from what I
   understand the usual cause of this is relates to a deeper rooted
   issue involving fonts and font-lock reliant packages.  I recommend
   adding the following to your =.emacs=:
   #+BEGIN_SRC emacs-lisp
   (setq inhibit-compacting-font-caches t)
   #+END_SRC
   or any more fancy variation thereof.  This variable also holds
   further information regarding what I believe is the cause of the
   problem.  If this should not fix the problem, please consider
   opening an issue or sending me a mail!

* Announcement Log
** =2020-02-02=
   *Good news!* The project is reaching an /acceptable/ first draft state.
   This means I am now preparing getting this package properly wrapped
   up and published on MELPA, with a side goal of trying to also be
   available on ELPA.  My conservative estimate for at least being
   available on MELPA is roughly by the end of this month.

** =2020-02-03=
   Everything went better than expected!  The tests seem to cover most
   use cases now, and it seems I have added proper terminal support.

** =2020-02-04=
   I set up a pull request, we will see how this goes.

** =2020-02-15=
   Version *0.3.0* is out and tagged for your convenience.  I am now
   content enough with the package to "freeze" elements of the API for
   good and move to version *1.0.0* once the pull request is closed.  I
   will keep the "under construction" tags around for the time being,
   however.

** =2020-02-16=
   Version *0.4.0* has been released!  You can now associate =TODO=
   keywords with special headline bullets.

** =2020-02-17=
   Version *0.5.0* now supports a new kind of way to hide leading
   bullets: Instead of using =org-hide=, setting
   ~org-superstar-remove-leading-stars~ allows you hide them akin to
   emphasis markers (see =org-hide-emphasis-markers=).


#  LocalWords:  Org's MELPA ELPA Worg fontification TODO README
